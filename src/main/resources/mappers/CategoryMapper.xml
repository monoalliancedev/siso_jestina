<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jt.mapper.CategoryMapper">

    <!-- DB 컬럼명과 DTO 클래스의 필드명 매핑작업 -->
	<resultMap id="CategoryMap" type="com.jt.domain.CategoryDTO">
	<result property="seq" column="seq" />
	<result property="regdate" column="regdate" />
	<result property="cateName" column="cate_name" />
	<result property="viewYn" column="view_yn" />
	<result property="sortIdx" column="sort_idx" />
	<result property="admId" column="adm_id" />
	</resultMap>
  
<!--##################################################################### -->

	<!-- 중복되는 검색 SQL문에 대한 처리 (카테고리,제품명)-->
	<sql id="search">
		<if test='keyValue1 != null and !keyValue1.equals("")'>
			AND seq = #{keyValue1}  
		</if>
		<if test='keyword != null and !keyword.equals("")'>
			AND cate_name <![CDATA[ LIKE '%${keyword}%' ]]>
		</if>
		
	</sql>
	
	<!-- 중복되는 날짜 SQL문에 대한 처리  -->
	<sql id="regdateUpdate">
		<choose>
	        <when test='regdate != null and !regdate.equals("")'>
	        ,regdate = #{regdate}
	        </when>
	        <otherwise>
	        ,regdate = DATE_FORMAT(NOW(), '%Y-%m-%d')
	        </otherwise>
        </choose>
	</sql>
	
<!--##################################################################### -->

	<!-- 검색 총 갯수  -->
    <select id="count" parameterType="com.jt.domain.SearchDTO" resultType="int">
		SELECT count(*) as c FROM tb_jt_romason_category where 1
		<include refid="search" />
	</select>
	
	<!-- 전체 총 갯수 -->
    <select id="totalCount"  resultType="int">
		SELECT count(*) as c FROM tb_jt_romason_category where 1
	</select>

	<!-- 검색 리스트 -->
	<select id="list" parameterType="com.jt.domain.SearchDTO" resultMap="CategoryMap">
		SELECT * FROM tb_jt_romason_category where 1
		<include refid="search" />
		ORDER BY sort_idx DESC,seq DESC
		LIMIT ${pg_start} , ${pg_rows}
	</select>
	
	<!-- 전체 리스트 -->
	<select id="categoryList" resultMap="CategoryMap">
		SELECT seq,cate_name FROM tb_jt_romason_category where 1
		ORDER BY sort_idx DESC,seq DESC 
	</select> 
	 
	
	<!-- 삭제 -->
    <delete id="delete" parameterType="int">
        DELETE FROM tb_jt_romason_category WHERE seq = #{seq}
    </delete>

    <!-- 상세정보 -->
    <select id="select" parameterType="int"  resultMap="CategoryMap">
        SELECT * FROM tb_jt_romason_category WHERE seq = #{seq}
    </select>
    
    
    <!-- 위로 이동 키값 -->
    <select id="UpSelect" parameterType="int"  resultMap="CategoryMap">
        SELECT seq, sort_idx FROM tb_jt_romason_category 
         WHERE sort_idx > #{sortIdx}
         <include refid="search" /> 
         ORDER BY sort_idx ASC,seq ASC LIMIT 1;
    </select>
    
    <!-- 아래로 이동 키값 -->
    <select id="DownSelect" parameterType="int"  resultMap="CategoryMap">
        SELECT seq, sort_idx FROM tb_jt_romason_category 
         WHERE sort_idx <![CDATA[<]]> #{sortIdx} 
         <include refid="search" />
         ORDER BY sort_idx DESC,seq DESC LIMIT 1;
    </select>
    
    <!-- 정렬순서 바꾸기 -->
    <select id="sortChange" parameterType="com.jt.util.ParameterMap">
		UPDATE tb_jt_romason_category SET sort_idx=#{sortIdx} where seq=#{seq};
	</select> 
    
    <!-- 게시여부 NEW ARRIVALS 바꾸기 -->
    <select id="isntChange" parameterType="com.jt.util.ParameterMap">
		UPDATE tb_jt_romason_category SET view_yn=#{viewYn} WHERE seq=#{seq}
	</select> 
	<select id="isntChangePro" parameterType="com.jt.util.ParameterMap">
		UPDATE tb_jt_romason SET view_yn=#{viewYn} WHERE category_seq=#{seq}
	</select> 
	
	
	
	<!-- 등록 및 수정 -->
	<insert id="insertAndUpdate" parameterType="com.jt.domain.CategoryDTO">
        REPLACE INTO tb_jt_romason_category 
		SET  cate_name = #{cateName}
	        ,adm_id = #{admId}
		<choose>
	        <when test='seq>0'>
	        ,seq = #{seq}
	        ,sort_idx = #{sortIdx}
	        </when>
	        <otherwise>
	        ,sort_idx = (SELECT IFNULL(MAX(b.sort_idx) + 1, 1) FROM tb_jt_romason_category b) 
	        </otherwise>
        	</choose>
        	<include refid="regdateUpdate" />
	</insert>
    
	
	
	




	
	<!-- 프론트 : 카테고리 이전,다음 -->
    <select id="FrontSelect" parameterType="int"  resultMap="CategoryMap">
        select sort_idx, cate_name, seq, sort_idx from (
	        (SELECT 1 as sort_idx, a.cate_name, a.seq
	          FROM tb_jt_romason_category a, (select sort_idx from tb_jt_romason_category where seq=#{seq}) b 
			 WHERE a.sort_idx > b.sort_idx
			 ORDER BY a.sort_idx ASC,a.seq ASC LIMIT 1)
	        UNION
	        (SELECT 2 as sort_idx, cate_name, seq
	          FROM tb_jt_romason_category 
			 WHERE seq=#{seq})
	        UNION
	        (SELECT 3 as sort_idx, a.cate_name, a.seq
	          FROM tb_jt_romason_category a, (select sort_idx from tb_jt_romason_category where seq=#{seq}) b 
			 WHERE a.sort_idx <![CDATA[<]]> b.sort_idx
			 ORDER BY a.sort_idx DESC,a.seq DESC LIMIT 1)
		) tb 
		order by sort_idx asc
    </select>
    
</mapper>